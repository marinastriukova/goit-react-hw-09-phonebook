{"version":3,"sources":["auth/Registration/Registration.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","auth/form.module.css"],"names":["Registration","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","className","styles","title","form","onSubmit","preventDefault","authOperations","register","autoComplete","label","input","type","onChange","button","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"wPAKe,SAASA,IACpB,IAAMC,EAAWC,cADkB,EAGXC,mBAAS,IAHE,mBAG5BC,EAH4B,KAGtBC,EAHsB,OAITF,mBAAS,IAJA,mBAI5BG,EAJ4B,KAIrBC,EAJqB,OAKHJ,mBAAS,IALN,mBAK5BK,EAL4B,KAKlBC,EALkB,KAO7BC,EAAe,SAAAC,GAAM,IAAD,EACEA,EAAEC,OAAlBR,EADc,EACdA,KAAMS,EADQ,EACRA,MAEd,OAAQT,GACJ,IAAM,OACFC,EAAQQ,GACR,MAEJ,IAAK,QACDN,EAASM,GACT,MAEJ,IAAM,WACFJ,EAAYI,KAcxB,OACI,gCACI,oBAAIC,UAAWC,IAAOC,MAAtB,0BAEA,uBAAMF,UAAWC,IAAOE,KACpBC,SAdS,SAAAP,GACjBA,EAAEQ,iBAEFlB,EAASmB,IAAeC,SAAS,CAAEjB,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASJa,aAAa,MAFjB,UAII,wBAAOR,UAAWC,IAAOQ,MAAzB,iBAEI,uBACIT,UAAWC,IAAOS,MAClBC,KAAK,OACLrB,KAAK,OACLS,MAAOT,EACPsB,SAAUhB,OAIlB,wBAAOI,UAAWC,IAAOQ,MAAzB,kBAEI,uBACIT,UAAWC,IAAOS,MAClBC,KAAK,QACLrB,KAAK,QACLS,MAAOP,EACPoB,SAAUhB,OAIlB,wBAAOI,UAAWC,IAAOQ,MAAzB,qBAEI,uBACIT,UAAWC,IAAOS,MAClBC,KAAK,WACLrB,KAAK,WACLS,MAAOL,EACPkB,SAAUhB,OAIlB,wBAAQI,UAAWC,IAAOY,OAAQF,KAAK,SAAvC,8B,8EC5ED,SAASG,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAG5B,QAETiB,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS","file":"static/js/5.d3a5a8bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth'\r\nimport styles from '../form.module.css';\r\n\r\nexport default function Registration() {\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case ('name'):\r\n                setName(value);\r\n                break;\r\n\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n\r\n            case ('password'):\r\n                setPassword(value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(authOperations.register({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={styles.title}>Registration</h1>\r\n\r\n            <form className={styles.form}\r\n                onSubmit={handleSubmit}\r\n                autoComplete='off'\r\n            >\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input\r\n                        className={styles.input}\r\n                        type='text'\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}>\r\n                    </input>\r\n                </label>\r\n\r\n                <label className={styles.label}>\r\n                    Email\r\n                    <input\r\n                        className={styles.input}\r\n                        type='email'\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}>\r\n                    </input>\r\n                </label>\r\n\r\n                <label className={styles.label}>\r\n                    Password\r\n                    <input\r\n                        className={styles.input}\r\n                        type='password'\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}>\r\n                    </input>\r\n                </label>\r\n\r\n                <button className={styles.button} type='submit'>Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"form_title__3m7q3\",\"form\":\"form_form__2bDfI\",\"label\":\"form_label__3MhJG\",\"input\":\"form_input__2pdXt\",\"button\":\"form_button__1f0eT\"};"],"sourceRoot":""}